from utils import read_accounts, random_sleep
from browser import init_driver
from login import login
from progress import get_case_numbers, process_case_link, notify_done
from config import ACCOUNT_FILE, DEBUG_KEEP_BROWSER
from logger import setup_logger

logger = setup_logger()

#max_retry_case = 5  # s·ªë l·∫ßn refresh n·∫øu ch∆∞a th·∫•y case "Temporary residence permit"


def main(max_days=10, max_retry_case=5):
    accounts = read_accounts(ACCOUNT_FILE)
    if not accounts:
        logger.error("‚ùå Kh√¥ng ƒë·ªçc ƒë∆∞·ª£c t√†i kho·∫£n n√†o")
        return

    driver = init_driver()
    total_users = len(accounts)

    for idx, (username, password) in enumerate(accounts, start=1):
        logger.info(f"üöÄ B·∫ÆT ƒê·∫¶U X·ª¨ L√ù USER {idx}/{total_users}: {username}")
        try:
            if not login(username, password, driver):
                logger.error(f"‚ùå Login th·∫•t b·∫°i cho USER {idx}: {username}")
                continue

            # Th·ª≠ t√¨m case ƒë√∫ng lo·∫°i nhi·ªÅu l·∫ßn
            attempts, cases = 0, []
            while attempts < max_retry_case:
                cases = get_case_numbers(driver)
                if cases:
                    break
                attempts += 1
                logger.warning(
                    f"‚ö†Ô∏è USER {idx}: ch∆∞a t√¨m th·∫•y case 'Temporary residence permit' ‚Üí th·ª≠ l·∫°i {attempts}/{max_retry_case}"
                )
                driver.refresh()
                random_sleep(5, 9)

            if not cases:
                logger.warning(f"‚õî USER {idx}: {username} kh√¥ng c√≥ case Temporary residence permit, b·ªè qua")
                continue

            for case_type, case_href in cases:
                logger.info(f"‚û°Ô∏è USER {idx}: Case {case_type} - {case_href}")
                try:
                    process_case_link(driver, case_href, max_days=max_days)
                except Exception as e:
                    logger.error(f"üí• Driver crash khi x·ª≠ l√Ω {username}: {e}")
                    try:
                        driver.quit()
                    except:
                        pass
                    driver = init_driver()  # t·∫°o l·∫°i browser
                    if login(driver, username, password):
                        process_case_link(driver, case_href, max_days=max_days)
                random_sleep(1.2, 2.5)

        except Exception as e:
            logger.exception(f"üí• L·ªói khi x·ª≠ l√Ω USER {idx}: {username} ‚Üí {e}")
        finally:
            logger.info(f"‚úÖ K·∫æT TH√öC USER {idx}/{total_users}: {username}")

    if not DEBUG_KEEP_BROWSER:
        driver.quit()
        logger.info("‚úÖ ƒê√£ ƒë√≥ng browser")
    else:
        logger.info("üîí Browser v·∫´n m·ªü ƒë·ªÉ debug")

    notify_done()


if __name__ == "__main__":
    main()
    notify_done()
